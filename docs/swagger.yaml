basePath: /
definitions:
  dto.InfoPrivateUser:
    properties:
      _id:
        type: string
      email:
        type: string
      name:
        type: string
      profilePicUrl:
        type: string
      roles:
        items:
          $ref: '#/definitions/dto.InfoRole'
        type: array
    required:
    - _id
    - email
    - name
    - roles
    type: object
  dto.InfoRole:
    properties:
      _id:
        type: string
      code:
        $ref: '#/definitions/model.RoleCode'
    required:
    - _id
    - code
    type: object
  dto.SignInBasic:
    properties:
      email:
        type: string
      password:
        maxLength: 100
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  dto.UserAuth:
    properties:
      tokens:
        $ref: '#/definitions/dto.UserTokens'
      user:
        $ref: '#/definitions/dto.InfoPrivateUser'
    required:
    - tokens
    - user
    type: object
  dto.UserTokens:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    required:
    - accessToken
    - refreshToken
    type: object
  model.RoleCode:
    enum:
    - LEARNER
    - ADMIN
    - AUTHOR
    - EDITOR
    type: string
    x-enum-varnames:
    - RoleCodeLearner
    - RoleCodeAdmin
    - RoleCodeAuthor
    - RoleCodeEditor
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /auth/signin/basic:
    post:
      consumes:
      - application/json
      description: Sign in by email
      parameters:
      - description: X-API-KEY is required
        in: header
        name: X-API-KEY
        required: true
        type: string
      - description: sign in body
        in: body
        name: signIn
        required: true
        schema:
          $ref: '#/definitions/dto.SignInBasic'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserAuth'
      security:
      - BearerAuth: []
      summary: Sign in
      tags:
      - auth
  /profile/mine:
    get:
      consumes:
      - application/json
      description: Get private profile
      parameters:
      - description: X-API-KEY is required
        in: header
        name: X-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.InfoPrivateUser'
      security:
      - BearerAuth: []
      summary: Get profile
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    description: 'Provide a valid JWT token. Format: Bearer <token>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
